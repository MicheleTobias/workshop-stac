---
title: "Time Series with HLS"
author: "Michele Tobias, PhD"
format: html
editor: visual
---

## Time Series with HLS & STAC Catalogs

This notebook will explore doing a time series analysis with HLS data for 10 Mile Dunes in northern California.

### Set Up

#### Libraries

First, we need to install any R libraries we want to use. You only need to do this once per computer.

```{r}
# Install Packages - only need to do this once 
install.packages(c("rstac", "terra", "RColorBrewer", "getPass", "earthdatalogin"))
```

Next, we need to load those libraries. You might assume that if we install the library, we want to use it, but R doesn't automatically load libraries you just installed.

```{r}
# Load Libraries 
library(rstac)          # interact with stac catalogs 
library(terra)          # work with raster data 
library(RColorBrewer)   # color pallets from Color Brewer, a library of colors designed for optimized readability in cartograhy 
library(getPass)        # allows us to give the code our password without it printing to the console 
library(earthdatalogin) # lets us authenticate to access NASA data
```

#### Authenticate and connect to the NASA Earth Data STAC Catalog

Store your user name and password in the R session but not in your code:

```{r}
earthdata_username <- getPass("Earthdata User:")
earthdata_password <- getPass("Earthdata Password:")
```

Now we run the authentication function inputting our username and password:

```{r}
earthdatalogin::edl_netrc(
  username = earthdata_username, 
  password = earthdata_password)
```

## Search HLS

```{r}
# connect to the stac endpoint we want to query
nasa_stac <- stac("https://cmr.earthdata.nasa.gov/stac/LPCLOUD")
```

Now let's define our geographic area of interest as the area that includes 10 Mile Dunes:

```{r}
# We need bbox defined for STAC queries
# minimum longitude, minimum latitude, maximum longitude, and maximum latitude ---> 10 Mile Dunes
bbox = c( -123.824405, 39.485343, -123.748531, 39.556319)
# Later we'll need the same bbox as a Terra extent object for reading data
extent = ext(c(bbox[1],bbox[3],bbox[2],bbox[4]))

plot(extent, col="lightblue") #ok, this is perhaps not that interesting, but sometimes it's nice to have proof you did something correctly by plotting it
```

```{r}
search_hls <- stac_search(
  q = nasa_stac, # The STAC API connection we made earlier
  collections = "HLSS30.v2.0", # https://lpdaac.usgs.gov/products/hlss30v002/
  bbox = bbox, #bounding box that we made eariler
  datetime = "2023-06-01T00:00:00Z/2023-07-30T00:00:00Z",  # A closed interval: e.g. "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z" 
  limit = 100 #limits how many results we see
)
```

??? Combine search with weather data ???

??? Maybe we do a time series within the year first?

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).
